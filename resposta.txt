----- Perguntas da etapa 1 -----

De acordo com o código apresentado, identifique as fragilidades que podem ser

vistas como más práticas de programação ou violação de princípios de design. Além disso,
reflita sobre as seguintes questões:

- As categorias e seus respectivos valores estão hardcoded na classe Automovel, o que dificultará futuras mudanças.

- A classe Cliente está fazendo coisas demais (cálculos de renda/pontos de alugador e exibindo o extrato), se comportando como uma god class.

- As classes Automovel e Locacao estão servindo apenas para "segurar" dados, enquanto a classe Cliente realiza ações que poderiam ser delegadas a estas classes.

a) O sistema está pronto quando uma nova classificação de carro for adicionada?

R: Não, pois ao criar uma nova classificação, além de adicionar a nova constante na classe Automovel  também seria necessário ajustar a classe "Cliente", pois lá também há a lógica para calcular o valor do aluguel que será emitido no extrato do mesmo.

b) E quando houver reajuste de preço? O código está pronto para executar
facilmente um novo esquema de pontos de alugador frequente?
R: Não, pois como a lógica de pontos é hardcoded na classe Cliente, seria necessário alterar o código diretamente na classe (também hardcoded, visto que a lógica adotada não é flexível) para ajustar o esquema de pontos.